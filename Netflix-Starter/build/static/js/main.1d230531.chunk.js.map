{"version":3,"sources":["utils/icons.jsx","addresses.js","components/DegenImage.jsx","components/MintModal.jsx","components/SelectedDegen.jsx","components/DegenPage.jsx","components/MainApp.jsx","components/SideBar.jsx","components/AppBody.jsx","components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["IconPlus","width","height","viewBox","fill","xmlns","x","y","rx","transform","addresses","degenShopAddress","degenAddress","DegenImage","timerState","setDegenSelected","data","chainId","Moralis","useState","isLoaded","setIsLoaded","convertUrlToFileString","urlString","splits","split","replace","imageLayers","setImageLayers","useEffect","a","executeFunction","abi","contractAddress","functionName","params","msgValue","degenImage","console","log","load","onClick","className","map","_","index","src","MintModal","defaultCosmetics","setMintModalOpen","pending","setPending","defaultBG","setDefaultBG","defaultBodyColor","setDefaultBodyColor","defaultHair","setDefaultHair","defaultEyes","setDefaultEyes","defaultNose","setDefaultNose","defaultMouth","setDefaultMouth","currentLayer","setCurrentLayer","tempList","push","parseInt","defaultId","disabled","mintDegen","cosmeticObject","imageUrl","SelectedDegen","DegenPage","account","degenOwnerList","allCosmetics","mintModalOpen","degenSelected","Object","keys","MainApp","mainAppState","SideBar","setMainAppState","menus","play","icon","text","link","markets","other","title","toUpperCase","item","alt","AppBody","useMoralisQuery","loaded","setLoaded","setDegenOwnerList","setAllCosmetics","setDefaultCosmetics","degenTransfer","setDegenTransfer","recievedDatabaseID","setRecievedID","getDegenTransfers","query","descending","autoFetch","availableCosmetics","limit","availableDefaults","includes","id","attributes","tokenId","to","degenOwnerQuery","Query","subscribe","on","object","setTimeout","fetch","degenTransfers","cosmeticsAvailable","defaultsAvailable","tempDegenObject","forEach","tempCosmetics","tempCosmetics2","tempAttributes","layerType","layerId","imageURL","name","imageName","defaultCosmeticObject","convertLayerObject","cosmeticId","Header","str","isAuthenticated","Number","toString","App","setChainId","useERC20Balances","useMoralis","enableWeb3","logout","isWeb3Enabled","isWeb3EnableLoading","isAuthenticating","authenticate","authError","web3Status","setWeb3Status","setTimerState","loadIntervalId","setInterval","clearInterval","window","provider","onSuccess","getChainId","chainIdFetch","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","appId","serverUrl","document","getElementById"],"mappings":"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","file":"static/js/main.1d230531.chunk.js","sourcesContent":["export const IconPlus =  (\r\n  <svg\r\n    width=\"43\"\r\n    height=\"44\"\r\n    viewBox=\"0 0 43 44\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <rect\r\n      x=\"18.5781\"\r\n      y=\"0.832031\"\r\n      width=\"5.85\"\r\n      height=\"42.4125\"\r\n      rx=\"2.925\"\r\n      fill=\"white\"\r\n    />\r\n    <rect\r\n      x=\"0.296875\"\r\n      y=\"24.9633\"\r\n      width=\"5.85\"\r\n      height=\"42.4125\"\r\n      rx=\"2.925\"\r\n      transform=\"rotate(-90 0.296875 24.9633)\"\r\n      fill=\"white\"\r\n    />\r\n  </svg>\r\n);\r\n\r\n// export const IconClose: React.FC = () => (\r\n//   <svg\r\n//     width=\"10\"\r\n//     height=\"10\"\r\n//     viewBox=\"0 0 10 10\"\r\n//     fill=\"none\"\r\n//     xmlns=\"http://www.w3.org/2000/svg\"\r\n//   >\r\n//     <path\r\n//       d=\"M7.0293 10L4.9773 6.904L3.1593 10H0.459297L3.7173 4.996L0.423297 0.027999H3.2673L5.3013 3.106L7.1373 0.027999L9.8373 0.027999L6.5613 4.996L9.8733 10H7.0293Z\"\r\n//       fill=\"white\"\r\n//     />\r\n//   </svg>\r\n// );\r\n\r\n// export const IconCheck: React.FC = () => (\r\n//   <svg\r\n//     width=\"8\"\r\n//     height=\"7\"\r\n//     viewBox=\"0 0 8 7\"\r\n//     fill=\"none\"\r\n//     xmlns=\"http://www.w3.org/2000/svg\"\r\n//   >\r\n//     <line\r\n//       x1=\"0.33282\"\r\n//       y1=\"2.77812\"\r\n//       x2=\"2.33282\"\r\n//       y2=\"5.77812\"\r\n//       stroke=\"white\"\r\n//       strokeWidth=\"0.8\"\r\n//     />\r\n//     <line\r\n//       x1=\"7.30729\"\r\n//       y1=\"0.256074\"\r\n//       x2=\"2.30729\"\r\n//       y2=\"6.25607\"\r\n//       stroke=\"white\"\r\n//       strokeWidth=\"0.8\"\r\n//     />\r\n//   </svg>\r\n// );\r\n\r\n// export const IconMarketPlace: React.FC = () => (\r\n//   <svg\r\n//     width=\"56\"\r\n//     height=\"53\"\r\n//     viewBox=\"0 0 56 53\"\r\n//     fill=\"none\"\r\n//     xmlns=\"http://www.w3.org/2000/svg\"\r\n//   >\r\n//     <rect\r\n//       x=\"2\"\r\n//       y=\"13\"\r\n//       width=\"43\"\r\n//       height=\"38\"\r\n//       rx=\"6\"\r\n//       stroke=\"white\"\r\n//       strokeWidth=\"4\"\r\n//     />\r\n//     <path\r\n//       d=\"M54.8716 1.92202C54.828 1.09474 54.1221 0.459395 53.2948 0.502937L39.8135 1.21248C38.9862 1.25602 38.3508 1.96196 38.3944 2.78925C38.4379 3.61653 39.1439 4.25187 39.9711 4.20833L51.9545 3.57763L52.5853 15.561C52.6288 16.3883 53.3347 17.0237 54.162 16.9801C54.9893 16.9366 55.6246 16.2306 55.5811 15.4034L54.8716 1.92202ZM43.8142 14.8648L54.4886 3.00431L52.2587 0.997416L41.5843 12.8579L43.8142 14.8648Z\"\r\n//       fill=\"white\"\r\n//     />\r\n//   </svg>\r\n// );\r\n\r\n// export const IconSoon: React.FC = () => (\r\n//   <svg\r\n//     width=\"47\"\r\n//     height=\"42\"\r\n//     viewBox=\"0 0 47 42\"\r\n//     fill=\"none\"\r\n//     xmlns=\"http://www.w3.org/2000/svg\"\r\n//   >\r\n//     <rect\r\n//       x=\"2\"\r\n//       y=\"2\"\r\n//       width=\"43\"\r\n//       height=\"38\"\r\n//       rx=\"6\"\r\n//       stroke=\"white\"\r\n//       strokeWidth=\"4\"\r\n//     />\r\n//     <circle cx=\"13\" cy=\"21\" r=\"2\" fill=\"white\" />\r\n//     <circle cx=\"24\" cy=\"21\" r=\"2\" fill=\"white\" />\r\n//     <circle cx=\"35\" cy=\"21\" r=\"2\" fill=\"white\" />\r\n//   </svg>\r\n// );\r\n\r\n// export const IconArrowLeft: React.FC = () => (\r\n//   <svg\r\n//     width=\"45\"\r\n//     height=\"18\"\r\n//     viewBox=\"0 0 45 18\"\r\n//     fill=\"none\"\r\n//     xmlns=\"http://www.w3.org/2000/svg\"\r\n//   >\r\n//     <path\r\n//       d=\"M1.18529 8.18683C0.736187 8.63593 0.736187 9.36407 1.18529 9.81317L8.50385 17.1317C8.95295 17.5808 9.68109 17.5808 10.1302 17.1317C10.5793 16.6826 10.5793 15.9545 10.1302 15.5054L3.62481 9L10.1302 2.49462C10.5793 2.04551 10.5793 1.31738 10.1302 0.868272C9.68109 0.419169 8.95295 0.419169 8.50385 0.868272L1.18529 8.18683ZM44.1055 7.85L1.99846 7.85V10.15L44.1055 10.15V7.85Z\"\r\n//       fill=\"white\"\r\n//     />\r\n//   </svg>\r\n// );\r\n","export const addresses = {\r\n    56:{\r\n        \r\n    },\r\n    97:{\r\n        degenShopAddress:\"0x8060e8A126a58353333D351d95E49a4E19C17741\",degenAddress:\"0x35fB8070e7c0075197892A6aad8132Ae6ae46101\"\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { addresses } from '../addresses';\r\n\r\nexport default function DegenImage({timerState,setDegenSelected,data,chainId,Moralis}) {\r\n  const [ isLoaded, setIsLoaded ] =useState(false)\r\n    function convertUrlToFileString(urlString){\r\n        if(urlString === \"\" ) {\r\n          return \"\"\r\n        }\r\n        let splits = urlString.split(\"/\")\r\n        return `/images/MythCityCompressed/${splits[5]}/${splits[6].replace(\"%20\",\" \")}`\r\n      }\r\n    const [imageLayers, setImageLayers ] = useState([])\r\n    useEffect(()=>{\r\n      if(isLoaded) return\r\n        async function load(){\r\n            try{\r\n                let degenImage = await Moralis.executeFunction({abi:[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getDegenImage\",\"outputs\":[{\"internalType\":\"string[13]\",\"name\":\"\",\"type\":\"string[13]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\r\n                contractAddress: addresses[chainId].degenAddress,\r\n                functionName: \"getDegenImage\",\r\n                params:{\"_id\":data\r\n                },msgValue:0});\r\n                setImageLayers(degenImage)\r\n                setIsLoaded(true)\r\n            }catch {\r\n              console.log(\"Failed to load image\")\r\n            }\r\n        }\r\n        load()\r\n      \r\n    },[timerState])\r\n  return (\r\n    <div onClick={()=>{setDegenSelected(data)}} className='degenBaseImageContainer'>\r\n        {imageLayers.map((_,index)=>{\r\n            return <img key={index} className='degenBaseImageLayer' src={convertUrlToFileString(_)}></img>\r\n        })}\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport \"../css/MintModal.css\"\r\nimport {addresses} from '../addresses'\r\nexport default function MintModal({ chainId,Moralis,convertUrlToFileString,defaultCosmetics, setMintModalOpen }) {\r\n\r\n  const [pending, setPending ] = useState(false)\r\n  const [defaultBG, setDefaultBG ] = useState(false)\r\n  const [defaultBodyColor, setDefaultBodyColor ] = useState(false)\r\n  const [defaultHair, setDefaultHair ] = useState(false)\r\n  const [defaultEyes, setDefaultEyes ] = useState(false)\r\n  const [defaultNose, setDefaultNose ] = useState(false)\r\n  const [defaultMouth, setDefaultMouth ] = useState(false)\r\n  const [currentLayer, setCurrentLayer ] = useState(0)\r\n\r\n  async function mintDegen(){\r\n    if(!defaultBG || !defaultBodyColor || !defaultHair || !defaultEyes || !defaultNose || !defaultMouth){\r\n      console.log(\"Not all layers chosen\")\r\n      setPending(false)\r\n    } else {\r\n      try{\r\n        let tempList = []\r\n        tempList.push(parseInt(defaultBG.defaultId))\r\n        tempList.push(parseInt(defaultBodyColor.defaultId))\r\n        tempList.push(parseInt(defaultNose.defaultId))\r\n        tempList.push(parseInt(defaultEyes.defaultId))\r\n        tempList.push(parseInt(defaultMouth.defaultId))\r\n        tempList.push(parseInt(defaultHair.defaultId))\r\n          let unlockCosmeticsTransactions = await Moralis.executeFunction({abi:[{\"inputs\":[{\"internalType\":\"uint256[6]\",\"name\":\"_listOfDefaults\",\"type\":\"uint256[6]\"}],\"name\":\"mintDegen\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\r\n          contractAddress: addresses[chainId].degenShopAddress,\r\n          functionName: \"mintDegen\",\r\n          params:{\"_listOfDefaults\":tempList\r\n          },msgValue:50000000000000000});\r\n        \r\n        setPending(false)\r\n        setMintModalOpen(false)\r\n      }catch {\r\n        setPending(false)\r\n      }\r\n\r\n    }\r\n  }\r\n  return (\r\n    <div className='mintModalContainer'>\r\n      <div>\r\n        <button disabled={pending} className='backButton' onClick={()=>{setMintModalOpen(false)}}>Back To Degens</button>\r\n      </div>\r\n      <div className=\"centerWidth\">\r\n        <button disabled={pending} className='selectionButton' onClick={()=>{setPending(true);mintDegen()}}>MINT FOR 0.05 BNB</button>\r\n      </div>\r\n      \r\n      <div className=\"layerSelectionDiv\">\r\n        \r\n        <div className='imageDiv'>\r\n          <img className=\"imageContainer\" src={defaultBG? convertUrlToFileString(defaultBG.cosmeticObject.imageUrl): \"\"}></img>\r\n          <img className=\"imageContainer\" src={defaultBodyColor? convertUrlToFileString(defaultBodyColor.cosmeticObject.imageUrl): \"\"}></img>\r\n          <img className=\"imageContainer\" src={defaultHair? convertUrlToFileString(defaultHair.cosmeticObject.imageUrl): \"\"}></img>\r\n          <img className=\"imageContainer\" src={defaultEyes? convertUrlToFileString(defaultEyes.cosmeticObject.imageUrl): \"\"}></img>\r\n          <img className=\"imageContainer\" src={defaultNose? convertUrlToFileString(defaultNose.cosmeticObject.imageUrl): \"\"}></img>\r\n          <img className=\"imageContainer\" src={defaultMouth? convertUrlToFileString(defaultMouth.cosmeticObject.imageUrl): \"\"}></img>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"layerSelectionDiv\">\r\n        <button className='selectionButton' onClick={()=>{setCurrentLayer(0)}}>Background</button>\r\n        <button className='selectionButton' onClick={()=>{setCurrentLayer(1)}}>Body Type</button>\r\n        <button className='selectionButton' onClick={()=>{setCurrentLayer(5)}}>Hair</button>\r\n        <button className='selectionButton' onClick={()=>{setCurrentLayer(3)}}>Eyes</button>\r\n        <button className='selectionButton' onClick={()=>{setCurrentLayer(2)}}>Nose</button>\r\n        <button className='selectionButton' onClick={()=>{setCurrentLayer(4)}}>Mouth</button>\r\n      </div>\r\n      <div className=\"cosmeticChoiceContainer\">\r\n        {defaultCosmetics && defaultCosmetics[currentLayer].map((_,index)=>{\r\n          return (\r\n            <div onClick={()=>{\r\n              if(currentLayer === 0){\r\n                setDefaultBG(_)\r\n              } else if(currentLayer === 1){\r\n                setDefaultBodyColor(_)\r\n              }else if(currentLayer === 5){\r\n                setDefaultHair(_)\r\n              }else if(currentLayer === 3){\r\n                setDefaultEyes(_)\r\n              }else if(currentLayer === 2){\r\n                setDefaultNose(_)\r\n              }else if(currentLayer === 4){\r\n                setDefaultMouth(_)\r\n              }\r\n            }}  key={index}>\r\n                <img className=\"cosmeticContainer\" src={convertUrlToFileString(_.cosmeticObject.imageUrl)}></img>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { addresses } from '../addresses';\r\n\r\nimport \"../css/SelectedDegen.css\"\r\nexport default function SelectedDegen({Moralis,data,chainId}) {\r\n    const [imageLayers, setImageLayers ] = useState([])\r\n\r\n    useEffect(()=>{\r\n        async function load(){\r\n            try{\r\n                let degenImage = await Moralis.executeFunction({abi:[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getDegenImage\",\"outputs\":[{\"internalType\":\"string[13]\",\"name\":\"\",\"type\":\"string[13]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\r\n                contractAddress: addresses[chainId].degenAddress,\r\n                functionName: \"getDegenImage\",\r\n                params:{\"_id\":data\r\n                },msgValue:0});\r\n                setImageLayers(degenImage)\r\n            }catch {\r\n              console.log(\"Failed to load image\")\r\n            }\r\n        }\r\n        load()\r\n      \r\n    },[])\r\n    function convertUrlToFileString(urlString){\r\n        if(urlString === \"\" ) {\r\n          return \"\"\r\n        }\r\n        let splits = urlString.split(\"/\")\r\n        return `/images/MythCityCompressed/${splits[5]}/${splits[6].replace(\"%20\",\" \")}`\r\n      }\r\n  return (\r\n    <div className='selectDegenContainer'>\r\n        <div className=\"degenStatsContainer\">\r\n            <div className=\"degenImage\">\r\n            {imageLayers.map((_,index)=>{\r\n            return <img key={index} className='degenImageLayer' src={convertUrlToFileString(_)}></img>\r\n        })}\r\n            </div>\r\n\r\n        </div>\r\n        <div className=\"inventoryContainer\">\r\n\r\n        </div>\r\n        <div className=\"footerSection\">\r\n\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React,{useEffect, useState} from 'react'\r\nimport \"../css/DegenPage.css\"\r\nimport { IconPlus } from '../utils/icons'\r\nimport DegenImage from './DegenImage'\r\nimport MintModal from './MintModal'\r\nimport SelectedDegen from './SelectedDegen'\r\n\r\nexport default function DegenPage({timerState,account,chainId,Moralis,convertUrlToFileString,defaultCosmetics,allCosmetics,degenOwnerList}) {\r\n\r\n  const [mintModalOpen, setMintModalOpen ] = useState(false)\r\n  const [degenSelected, setDegenSelected ] = useState(false)\r\n  useEffect(()=>{\r\n    \r\n  },[degenOwnerList])\r\n\r\n  return (\r\n    <div className='degenPageContent'>\r\n      {mintModalOpen&& !degenSelected && <MintModal chainId={chainId} Moralis={Moralis} convertUrlToFileString={convertUrlToFileString} defaultCosmetics={defaultCosmetics} setMintModalOpen={setMintModalOpen} />}\r\n      {!mintModalOpen&& !degenSelected && <>\r\n        <h3>START YOUR JOURNEY</h3>\r\n        <p>Acquire or Select a Degen to get started.</p>\r\n        <div className=\"degens\">\r\n            \r\n                <div onClick={()=>{setMintModalOpen(true)}} className=\"avatarDegen avatarDegenPlus\">\r\n                    {IconPlus}\r\n                </div>\r\n                {degenOwnerList && Object.keys(degenOwnerList).map((_,index)=>{\r\n                  if(degenOwnerList[_] === account ){\r\n                    return <DegenImage timerState={timerState} setDegenSelected={setDegenSelected} chainId={chainId} Moralis={Moralis} key={index} data={_}/>\r\n                  }\r\n                  \r\n                })}\r\n            \r\n        </div>\r\n      </>}\r\n      {degenSelected && !mintModalOpen && <SelectedDegen Moralis={Moralis} chainId={chainId} data={degenSelected}/>}\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport DegenPage from './DegenPage'\r\n\r\nexport default function MainApp({timerState,account,Moralis,convertUrlToFileString,defaultCosmetics,allCosmetics,degenOwnerList,mainAppState,chainId}) {\r\n  if(chainId !== 97){\r\n    return (\r\n      <div className=\"connectMetaMask\">\r\n         <h3 >Please Connect To BSC Main Net</h3> \r\n         <h3 >Network Name: BSC Mainnet</h3> \r\n         <h3 >New RPC URL: https://bsc-dataseed.binance.org/</h3> \r\n         <h3 >ChainID: 56</h3> \r\n         <h3 >Symbol: BNB</h3> \r\n         <h3 >Block Explorer URL: https://bscscan.com/</h3> \r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div className='container'>\r\n      {mainAppState === \"DEGENS\" && <DegenPage timerState={timerState} account={account} chainId={chainId} Moralis={Moralis} convertUrlToFileString={convertUrlToFileString} degenOwnerList={degenOwnerList} allCosmetics={allCosmetics} defaultCosmetics={defaultCosmetics}/>}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport \"../css/SideBar.css\"\r\nexport default function SideBar({mainAppState,setMainAppState}) {\r\n\r\n    const menus = {\r\n        play: [\r\n          { icon: 'degens', text: 'DEGENS', link: '/degens' },\r\n          { icon: '', text: 'MISSIONS', link: '/missions' },\r\n          { icon: 'fight', text: 'FIGHT', link: '/fight' },\r\n          { icon: 'crafting', text: 'CRAFTING', link: '/crafting' },\r\n        ],\r\n        markets: [\r\n          { icon: 'shop', text: 'SHOP', link: '/shop' },\r\n          { icon: '', text: 'MARKETPLACE', link: '/marketplace' },\r\n          { icon: 'trade', text: 'TRADE', link: '/trade' },\r\n        ],\r\n        other: [\r\n          { icon: '', text: 'STAKING', link: '/staking' },\r\n          { icon: 'games', text: 'GAMES', link: '/games' },\r\n        ],\r\n      };\r\n  return (\r\n    <div className='sidebarContainer'>\r\n      {Object.keys(menus).map((title) => (\r\n        <div  className='sidebarBox' key={`menu-title-${title}`}>\r\n          <h3 className='h3Text'>{title.toUpperCase()}</h3>\r\n          {menus[title].map((item) => (\r\n            <div\r\n            onClick={()=>{setMainAppState(item.text)}}\r\n            className={mainAppState === item.text ? \"menuItem menuItemActive\":\"menuItem\"}\r\n              key={`menu-${item.text}`}\r\n            >\r\n              {item.icon && <img className='imgSide' src={`/img/icons/${item.icon}.svg`} alt=\"\" />}\r\n              {item.text}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n      <div className='sidebarBox last'>\r\n        <h3 className='h3Text'>SOCIALS</h3>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React,{useEffect, useState} from 'react'\r\nimport { Loading } from 'web3uikit'\r\nimport \"../css/AppBody.css\"\r\nimport MainApp from './MainApp'\r\nimport SideBar from './SideBar'\r\nexport default function AppBody({Moralis,account,timerState,chainId,useMoralisQuery}) {\r\n  const [mainAppState, setMainAppState ] = useState(\"DEGENS\")\r\n  const [loaded, setLoaded ] = useState(false)\r\n  const [degenOwnerList, setDegenOwnerList ] = useState({})\r\n  const [allCosmetics, setAllCosmetics ] = useState(false)\r\n  const [defaultCosmetics, setDefaultCosmetics ] = useState(false)\r\n  const [degenTransfer, setDegenTransfer ] = useState(false)\r\n  const [recievedDatabaseID, setRecievedID ] = useState([])\r\n\r\n  function convertUrlToFileString(urlString){\r\n    if(urlString === \"\" ) {\r\n      return \"\"\r\n    }\r\n    let splits = urlString.split(\"/\")\r\n    return `/images/MythCityCompressed/${splits[5]}/${splits[6].replace(\"%20\",\" \")}`\r\n  }\r\n\r\n  const getDegenTransfers  = useMoralisQuery(\r\n    \"transferDegen\",\r\n    (query) => query.descending(\"createdAt\"),\r\n    [],\r\n    { autoFetch: false }\r\n  );\r\n  const availableCosmetics  = useMoralisQuery(\r\n    \"cosmeticAdded\",\r\n    (query) => query.descending(\"createdAt\").limit(2000),\r\n    [],\r\n    { autoFetch: false }\r\n  );\r\n  const availableDefaults  = useMoralisQuery(\r\n    \"defaultAdded\",\r\n    (query) => query.descending(\"createdAt\").limit(2000),\r\n    [],\r\n    { autoFetch: false }\r\n  );\r\n    useEffect(()=>{\r\n      if(!degenTransfer) return\r\n      if(!recievedDatabaseID.includes(degenTransfer.id)){\r\n        degenOwnerList[degenTransfer.attributes.tokenId] = degenTransfer.attributes.to\r\n        setDegenOwnerList(degenOwnerList)\r\n        setRecievedID([...recievedDatabaseID,degenTransfer.id])\r\n      } else {\r\n    \r\n      }\r\n      setDegenTransfer(false)\r\n\r\n    },[degenTransfer])\r\n    \r\n    useEffect(()=>{\r\n      const degenOwnerQuery = new Moralis.Query(\"transferDegen\")\r\n      async function load(){\r\n        if(loaded) return\r\n        try{\r\n          let degenSub = await degenOwnerQuery.subscribe()\r\n          degenSub.on('update', (object) => {\r\n            setTimeout(()=>{setDegenTransfer(object)},10000)\r\n            \r\n              \r\n            });\r\n        } catch {\r\n          return\r\n        }\r\n\r\n        const degenTransfers = await getDegenTransfers.fetch()\r\n        const cosmeticsAvailable = await availableCosmetics.fetch()\r\n        const defaultsAvailable = await availableDefaults.fetch()\r\n        let tempDegenObject = {}\r\n        if(degenTransfers && cosmeticsAvailable){\r\n          setLoaded(true)\r\n          degenTransfers.forEach((_)=>{\r\n            if(!tempDegenObject[_.attributes.tokenId]){\r\n              tempDegenObject[_.attributes.tokenId] = _.attributes.to\r\n            } \r\n          })\r\n          setDegenOwnerList(tempDegenObject)\r\n          let tempCosmetics = {\r\n            0:[],\r\n            1:[],\r\n            2:[],\r\n            3:[],\r\n            4:[],\r\n            5:[],\r\n            6:[],\r\n            7:[],\r\n            8:[],\r\n            9:[],\r\n            10:[]\r\n          }\r\n          let tempCosmetics2 = {\r\n            0:{},\r\n            1:{},\r\n            2:{},\r\n            3:{},\r\n            4:{},\r\n            5:{},\r\n            6:{},\r\n            7:{},\r\n            8:{},\r\n            9:{},\r\n            10:{}\r\n          }\r\n          cosmeticsAvailable.forEach((_,index)=>{\r\n            let tempAttributes = _.attributes\r\n            tempCosmetics[parseInt(tempAttributes.layerType)].push({layerType:parseInt(tempAttributes.layerType),layerId:parseInt(tempAttributes.layerId),imageUrl:tempAttributes.imageURL, name:tempAttributes.imageName})\r\n            tempCosmetics2[parseInt(tempAttributes.layerType)][parseInt(tempAttributes.layerId)] = {layerType:parseInt(tempAttributes.layerType),layerId:parseInt(tempAttributes.layerId),imageUrl:tempAttributes.imageURL, name:tempAttributes.imageName}\r\n         \r\n          })\r\n\r\n          let defaultCosmeticObject = {\r\n            0:[],\r\n            1:[],\r\n            2:[],\r\n            3:[],\r\n            4:[],\r\n            5:[]\r\n\r\n          }\r\n          const convertLayerObject = {\r\n            0:0,\r\n            1:1,\r\n            2:5,\r\n            3:2,\r\n            4:4,\r\n            5:6\r\n          }\r\n\r\n            defaultsAvailable.forEach((_)=>{\r\n              let tempAttributes = _.attributes\r\n              defaultCosmeticObject[tempAttributes.layerType].push({defaultId:tempAttributes.defaultId, cosmeticObject:tempCosmetics2[convertLayerObject[parseInt(tempAttributes.layerType)]][parseInt(tempAttributes.cosmeticId)]})\r\n            })\r\n            setDefaultCosmetics(defaultCosmeticObject)\r\n\r\n          setAllCosmetics(tempCosmetics2)\r\n\r\n        }\r\n      }\r\n      load()\r\n    },[timerState])\r\n  return (\r\n    <div className='AppBodyContainer'>\r\n      <SideBar setMainAppState={setMainAppState} mainAppState={mainAppState} />\r\n      <MainApp account={account} timerState={timerState} degenOwnerList={degenOwnerList} Moralis={Moralis} convertUrlToFileString={convertUrlToFileString} allCosmetics={allCosmetics} defaultCosmetics={defaultCosmetics} chainId={chainId} mainAppState={mainAppState}/>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport \"../css/Header.css\"\r\nimport { ConnectButton } from 'web3uikit';\r\n\r\nexport default function Header({isAuthenticated,account}) {\r\n    const shortenAddress = (address) => {\r\n        return address.slice(0, 5) + '...' + address.slice(-4);\r\n      };\r\n      const getRegNumber = (str) => {\r\n        return Number(str)\r\n          .toString()\r\n          .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n      };\r\n  return (\r\n    <div className='headerContainer'>\r\n        <div className='logo'>MYTH</div>\r\n        <div className='balance'>\r\n          <img src=\"/img/coin.png\" width=\"40px\" alt=\"\" />\r\n          <div className='balanceAmount'>\r\n            MYTHRAL\r\n            <span className='spanText'>{getRegNumber(0)}</span>\r\n          </div>\r\n        \r\n        <div className=\"account\">\r\n            <div className=\"avatarHeader\">\r\n            <img src=\"/img/avatar.png\" width=\"40px\" alt=\"\" />\r\n            </div>\r\n            <ConnectButton />\r\n            {/* <p className='pText'>\r\n            {isAuthenticated\r\n              ? shortenAddress(account ? account : '')\r\n              : 'Logged Out'}\r\n          </p> */}\r\n        </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React,{ useEffect, useState } from 'react';\nimport './App.css';\nimport AppBody from './components/AppBody';\nimport Header from './components/Header';\n\nimport { useMoralis, useERC20Balances } from \"react-moralis\"\nimport { useMoralisQuery } from \"react-moralis\";\n\nconst App = () => {\n\n\n  const [ chainId, setChainId ] = useState(false)\n  const [ loaded, setLoaded ] = useState(false)\n  const { data: assets } = useERC20Balances();\n  const {\n    account,\n    isAuthenticated,\n    logout,\n    enableWeb3,\n    isWeb3Enabled,\n    isWeb3EnableLoading,\n    isAuthenticating,\n    authenticate,\n    Moralis,\n    authError\n} = useMoralis();\n\nconst [web3Status, setWeb3Status] =\nuseState('disconnected');\n\nconst [timerState, setTimerState] = useState(0);\n\nuseEffect( ()=>{\n  const loadIntervalId = setInterval(()=>{setTimerState(timerState + 1)},1000);\n  return () => clearInterval(loadIntervalId)\n},[timerState])\n\nuseEffect(() => {\n    // to avoid problems in Next.JS apps because of window object\n    if (typeof window == 'undefined') return;\n    if (\n        !isWeb3Enabled &&\n        !isWeb3EnableLoading &&\n        !account&&\n        web3Status === 'disconnected'\n    ) {\n        enableWeb3({\n            provider: \"metamask\",\n            onSuccess: () => setWeb3Status('only_web3')\n        });\n    }\n}, [isWeb3Enabled, isWeb3EnableLoading, account, web3Status, enableWeb3]);\n\nuseEffect(() => {\n  if(isWeb3Enabled === false) return\n  else{\n    load()\n  }\n  async function load(){\n    if(!Moralis)return\n    let chainIdFetch = await Moralis.getChainId()\n    setChainId(parseInt(chainIdFetch))\n  }\n}, [timerState])\nuseEffect(()=>{\n  if(isWeb3Enabled) setLoaded(true)\n},[Moralis,isWeb3Enabled])\n\n  return(\n    <div className='App'>\n      <Header isAuthenticated={isAuthenticated} account={account} />\n      <AppBody Moralis={Moralis} account={account} timerState={timerState} useMoralisQuery={useMoralisQuery} chainId={chainId} />\n      \n    </div>\n  )\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { MoralisProvider } from \"react-moralis\";\nimport { NotificationProvider } from 'web3uikit';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <MoralisProvider appId=\"logf0U8JaWXUU1KVW1TAQeLfG9smPkDK3Xz9NX0w\" serverUrl=\"https://l8ffx9ewemaf.usemoralis.com:2053/server\">\n      <NotificationProvider>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      </NotificationProvider>\n    </MoralisProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}