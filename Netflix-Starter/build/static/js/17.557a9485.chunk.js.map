{"version":3,"sources":["../../src/chain/IChainInterface.ts","../../src/chain/config.ts","../../src/errors/index.ts","../../src/wallet/index.ts","../../src/adapter/IAdapter.ts","../../src/config.ts","../../src/openloginAdapter.ts"],"names":["CHAIN_NAMESPACES","EIP155","SOLANA","ADAPTER_NAMESPACES","MULTICHAIN","DEFAULT_INFURA_ID","getChainConfig","finalChainId","chainId","parseInt","chainNamespace","getDefaultNetworkId","rpcTarget","displayName","blockExplorer","ticker","tickerName","getEvmChainConfig","getSolanaChainConfig","Web3AuthError","constructor","code","message","Object","value","toJSON","name","toString","JSON","CustomError","WalletInitializationError","fromCode","extraMessage","notFound","notInstalled","notReady","windowBlocked","windowClosed","incompatibleChainNameSpace","duplicateAdapterError","invalidProviderConfigError","providerNotReadyError","rpcConnectionError","invalidParams","invalidNetwork","WalletLoginError","connectionError","disconnectionError","notConnectedError","popupClosed","MULTI_CHAIN_ADAPTERS","OPENLOGIN","WALLET_CONNECT_V1","WALLET_CONNECT_V2","SOLANA_ADAPTERS","TORUS_SOLANA","PHANTOM","EVM_ADAPTERS","TORUS_EVM","METAMASK","WALLET_ADAPTERS","ADAPTER_CATEGORY","ADAPTER_STATUS","NOT_READY","READY","CONNECTING","CONNECTED","DISCONNECTED","ERRORED","ADAPTER_EVENTS","ADAPTER_DATA_UPDATED","BaseAdapter","chainConfigProxy","setChainConfig","customChainConfig","defaultChainConfig","setAdapterSettings","checkConnectionRequirements","checkInitializationRequirements","updateAdapterData","adapterName","data","SafeEventEmitter","getOpenloginDefaultOptions","adapterSettings","network","OPENLOGIN_NETWORK","clientId","uxMode","UX_MODE","POPUP","chainConfig","loginSettings","relogin","OpenloginAdapter","params","log","defaultOptions","MAINNET","defaultChainIdConfig","provider","init","redirectResult","getHashQueryParams","isRedirectResult","options","connect","adapter","error","disconnect","cleanup","getUserInfo","userInfo","connectWithProvider","SolanaPrivateKeyProvider","config","EthereumPrivateKeyProvider","merge","loginProvider","extraLoginOptions","login_hint","finalPrivKey","getED25519Key","reconnected"],"mappings":"u6BAAaA,EAAmB,CAC9BC,OAD8B,SAE9BC,OAAQ,UAKGC,EAAkB,cAE7BC,WAAY,eCRDC,EAAoB,mCAgJpBC,EAAiB,cAC5B,IAAMC,EAAeC,EAAW,sBAAwCC,SAAQ,EAApD,IAhJDC,YAC3B,GAAIA,IAAmBV,EAAvB,OACE,SACK,GAAIU,IAAmBV,EAAvB,OACL,SAEF,MAAM,sCAAN,sBA0IiGW,CAAjG,GACA,OAAID,IAAmBV,EAAvB,OAxIgCQ,YAChC,IAAME,EAAiBV,EAAvB,OACA,WAAIQ,EACK,CACLE,iBACAF,QAFK,MAGLI,UAAS,uCAHJ,GAILC,YAJK,mBAKLC,cALK,wBAMLC,OANK,MAOLC,WAAY,YAET,IAAIR,EACF,CACLE,iBACAF,QAFK,MAGLI,UAAS,uCAHJ,GAILC,YAJK,UAKLC,cALK,gCAMLC,OANK,MAOLC,WAAY,YAET,IAAIR,EACF,CACLE,iBACAF,QAFK,MAGLI,UAAS,uCAHJ,GAILC,YAJK,UAKLC,cALK,gCAMLC,OANK,MAOLC,WAAY,YAET,IAAIR,EACF,CACLE,iBACAF,QAFK,MAGLI,UAAS,sCAHJ,GAILC,YAJK,SAKLC,cALK,+BAMLC,OANK,MAOLC,WAAY,YAET,KAAIR,EACF,CACLE,iBACAF,QAFK,OAGLI,UAAS,qCAHJ,GAILC,YAJK,QAKLC,cALK,8BAMLC,OANK,MAOLC,WAAY,YAET,MAAIR,EACF,CACLE,iBACAE,UAFK,0BAGLE,cAHK,0BAILN,QAJK,OAKLK,YALK,kBAMLE,OANK,QAOLC,WAAY,SAET,QAAIR,EACF,CACLE,iBACAE,UAFK,oCAGLE,cAHK,sCAILN,QAJK,UAKLK,YALK,yBAMLE,OANK,QAOLC,WAAY,SAET,KAAIR,EACF,CACLE,iBACAE,UAFK,mCAGLE,cAHK,sBAILN,QAJK,OAKLK,YALK,6BAMLE,OANK,MAOLC,WAAY,OAET,KAAIR,EACF,CACLE,iBACAE,UAFK,iDAGLE,cAHK,8BAILN,QAJK,OAKLK,YALK,6BAMLE,OANK,MAOLC,WAAY,OAIhB,KA2CSC,CAAP,GACSP,IAAmBV,EAAvB,OAzC4BQ,YACnC,IAAME,EAAiBV,EAAvB,OACA,WAAIQ,EACK,CACLE,iBACAI,cAFK,8BAGLN,QAHK,MAILK,YAJK,iBAKLD,UALK,sCAMLG,OANK,MAOLC,WAAY,gBAET,IAAIR,EACF,CACLI,UADK,iCAELE,cAFK,8CAGLN,QAHK,MAILE,iBACAG,YALK,UAMLE,OANK,MAOLC,WAAY,UAET,IAAIR,EACF,CACLI,UADK,gCAELE,cAFK,6CAGLN,QAHK,MAILE,iBACAG,YALK,SAMLE,OANK,MAOLC,WAAY,UAIhB,KAQSE,CAAP,GAGF,MC5IoBC,E,kDAKpBC,WAAmBC,EAAcC,oCAE/B,iB,uEAEA,SACA,UAAeA,GAAf,GAEAC,4CAAoC,CAAEC,MAAO,kBAPdF,E,0CAUjCG,WACE,MAAO,CACLC,KAAM,KADD,KAELL,KAAM,KAFD,KAGLC,QAAS,KAAKA,W,sBAIlBK,WACE,OAAOC,eAAe,KAAtB,c,GAxBwCC,KA4B/BC,E,kDAiBXV,WAAmBC,EAAcC,oCAE/B,mBAGAC,4CAAoC,CAAEC,MAAO,8BALdF,E,iDAQnBS,SAAQ,G,IAAeC,yDAAe,GAClD,OAAO,kBAAuCF,WAAvC,gBAAP,M,sBAIYG,W,IAASD,yDAAe,GACpC,OAAOF,gBAAP,K,0BAGYI,W,IAAaF,yDAAe,GACxC,OAAOF,gBAAP,K,sBAGYK,W,IAASH,yDAAe,GACpC,OAAOF,gBAAP,K,2BAGYM,W,IAAcJ,yDAAe,GACzC,OAAOF,gBAAP,K,0BAGYO,W,IAAaL,yDAAe,GACxC,OAAOF,gBAAP,K,wCAGYQ,W,IAA2BN,yDAAe,GACtD,OAAOF,gBAAP,K,mCAGYS,W,IAAsBP,yDAAe,GACjD,OAAOF,gBAAP,K,wCAGYU,W,IAA2BR,yDAAe,GACtD,OAAOF,gBAAP,K,mCAGYW,W,IAAsBT,yDAAe,GACjD,OAAOF,gBAAP,K,gCAGYY,W,IAAmBV,yDAAe,GAC9C,OAAOF,gBAAP,K,2BAGYa,W,IAAcX,yDAAe,GACzC,OAAOF,gBAAP,K,4BAGYc,W,IAAeZ,yDAAe,GAC1C,OAAOF,gBAAP,O,GA3E2CX,G,IAAlCW,aAC6B,CACtC,IADsC,SAEtC,KAFsC,sBAGtC,KAHsC,0BAItC,KAJsC,0BAKtC,KALsC,2BAMtC,KANsC,4CAOtC,KAPsC,wCAQtC,KARsC,oCAStC,KATsC,0BAUtC,KAVsC,4BAWtC,KAXsC,iCAYtC,KAZsC,2BAatC,KAAM,6B,IAqEGe,E,kDASXzB,WAAmBC,EAAcC,oCAE/B,mBAGAC,4CAAoC,CAAEC,MAAO,qBALdF,E,iDAQnBS,SAAQ,G,IAAeC,yDAAe,GAClD,OAAO,kBAA8Ba,WAA9B,WAAP,M,6BAGYC,W,IAAgBd,yDAAe,GAC3C,OAAOa,gBAAP,K,gCAGYE,W,IAAmBf,yDAAe,GAC9C,OAAOa,gBAAP,K,+BAGYG,W,IAAkBhB,yDAAe,GAC7C,OAAOa,gBAAP,K,yBAGYI,W,IAAYjB,yDAAe,GACvC,OAAOa,gBAAP,O,GAlCkC1B,G,qkBAAzB0B,aAC6B,CACtC,IADsC,SAEtC,KAFsC,gCAGtC,KAHsC,mCAItC,KAJsC,0BAKtC,KAAM,6C,IClIGK,EAAuB,CAClCC,UADkC,YAElCC,kBAFkC,oBAGlCC,kBAAmB,qBAGRC,EAAe,GAC1BC,aAD0B,eAE1BC,QAAS,WAFiB,GAMfC,EAAY,GACvBC,UADuB,YAEvBC,SAAU,YAFa,GAMZC,EAAe,a,qkBC2BfC,EAEH,SAWGC,EAAiB,CAC5BC,UAD4B,YAE5BC,MAF4B,QAG5BC,WAH4B,aAI5BC,UAJ4B,YAK5BC,aAL4B,eAM5BC,QAAS,WAGEC,EAAc,cAEzBC,qBAAsB,yBAyBFC,E,2JACW,I,iCAImB,M,oDAY9CC,WACF,OAAO,sBAAwB,KAAxB,aAAP,O,4BAKFC,SAAc,GACZ,GAAI,cAAgBX,EAApB,OACA,IAAKY,EAAL,eAAuC,MAAM5C,WAAN,wDACvC,IAAM6C,EAAqBrE,EAAeoE,EAAD,eAAmCA,EAA5E,SACA,iC,gCAGFE,SAAkB,M,yCAElBC,WAEE,GAAI,YAAcjB,EAAd,mBAAmD,cAAgBE,EAAvE,YACK,GAAI,cAAgBA,EAApB,WAA+C,MAAMhC,WAAN,sBAEpD,GAAI,cAAgBgC,EAApB,UAA8C,MAAMjB,kBAAN,qBAC9C,GAAI,cAAgBiB,EAApB,MAA0C,MAAMjB,kBAAN,sC,6CAG5CiC,WACE,GAAI,cAAgBhB,EAApB,WACA,GAAI,cAAgBA,EAApB,UAA8C,MAAMhC,WAAN,qBAC9C,GAAI,cAAgBgC,EAApB,MAA0C,MAAMhC,WAAN,qC,+BAG5CiD,SAAiB,GACf,mBACA,UAAUV,EAAV,qBAA+C,CAAEW,YAAa,KAAf,KAA0BC,a,GAjDhCC,K,uCCzFhCC,EAA6B,cACxC,MAAO,CACLC,gBAAiB,CACfC,QAASC,IADM,QAEfC,SAFe,GAGfC,OAAQC,IAAQC,OAElBC,YAAajF,EAAiBJ,EAAc,EAAjB,QANtB,EAOLsF,cAAe,CACbC,SAAS,K,qkBCqBFC,E,kDAmBX1E,WAAY2E,S,MAAAA,oBACV,e,0BAnBsBnC,EAAgBT,W,sCAEUhD,EAAmBC,Y,0BAE9ByD,G,uCAEM,M,4BAERC,EAAeC,W,2CAED/D,EAAiBC,Q,iFAI7B,I,qCAEc,MAInD+F,uCACA,IAAMC,EAAiBd,EAA0B,UAACY,EAAD,gCAACA,EAAD,yBAAqCA,EAArC,gCAAqCA,EAAtF,SASA,GARA,wBACER,SADF,GAEEF,QAASC,IAAkBY,SACxBD,EAHL,iBAIMF,mBAJN,IAMA,uBAA0BE,EAA1B,eAA2DF,EAA3D,eAEA,UAAIA,EAAJ,0BAAIA,EAAJ,eAAwC,OACtC,kCAA6BA,EAA7B,gCAA6BA,EAA7B,eACA,IAAMI,EAAuBF,cAA6BA,EAA7BA,YAA7B,GAGA,GAFA,+BAAiDF,QAAjD,IAAiDA,OAAjD,EAAiDA,EAAjD,aACAC,wCAAyC,EAAzCA,cACK,cAAL,UACE,MAAMlE,gBAAN,wCAlBMiE,S,kDAuBRvB,WACF,OAAO,sBAAwB,KAAxB,aAAP,O,oBAGE4B,W,MACF,OAAO,gEAAP,M,IAGEA,SAAQ,GACV,MAAM,UAAN,qB,yDAGIC,WAAI,GAAJA,8EACJ,wFACI,UAAC,KAAD,+BAAC,EAAL,SAFIA,sBAEwCvE,gBAAN,0DAFlCuE,UAGC,KAAL,YAHIA,sBAGyBvE,gBAAN,iDAHnBuE,cAIJ,uBAAyB,QAAc,KAAvC,kBACMC,EAAiBC,cACnBC,GAAJ,EACIjF,yBAA0C+E,EAA9C,SACEE,MAREH,UAUE,uBAAN,OAVIA,WAYJ,YAAcvC,EAAd,MACA,UAAUO,EAAV,MAAgCT,EAAhC,WAbIyC,WAiBE,iCAAmCI,gBAAvC,EAjBEJ,kCAkBM,KAAN,UAlBAA,2DAqBFL,mEACA,0BAtBEK,2D,mHA0BAK,WAAO,GAAPA,wEACJ,oFACA,YAAc5C,EAAd,WACA,UAAUO,EAAV,yBAAkDsC,QAAS/C,EAAgBT,aAHvEuD,kBAKI,yBAAN,GALEA,gCAMK,KAAP,UANEA,mCAQFV,UADuB,4CACvBA,MAEA,YAAclC,EAAd,MACA,UAAUO,EAAV,cACA,6BAAKuC,sBAAL,qBAZEF,uBAaM7D,EAAN,cAbA6D,cAeI7D,kBAAN,kCAfE6D,yD,sHAmBAG,mGAAWJ,iCAAgC,CAAEK,SAAS,GACtD,cAAgBhD,EAApB,UADI+C,sBACgDhE,oBAAN,6BAD1CgE,UAEC,KAAL,kBAFIA,sBAE+B/E,WAAN,kCAFzB+E,uBAGE,uBAAN,SAHIA,OAIAJ,EAAJ,SACE,YAAc3C,EAAd,UACA,4BACA,2BAGA,YAAcA,EAAd,MAGF,UAAUO,EAAV,cAbIwC,gD,sHAgBAE,uFACA,cAAgBjD,EAApB,UADIiD,sBACgDlE,oBAAN,6BAD1CkE,UAEC,KAAL,kBAFIA,sBAE+BjF,WAAN,kCAFzBiF,uBAGmB,uBAAvB,cAHIA,cAGEC,EAHFD,yBAIJ,GAJIA,gD,sFAQNnC,SAAkB,GAChB,GAAI,cAAgBd,EAApB,OACA,IAAMmC,EAAiBd,IACvB,+BAA6Bc,EAA7B,iBAAiE,uBAAjE,U,4BAIFxB,SAAc,GACZ,yEACA,2BAA6BC,EAA7B,iB,wEAGYuC,WAAmB,GAAnBA,sFACP,KAAL,YADYA,sBACiBnF,gBAAN,iDADXmF,UAEP,KAAL,kBAFYA,sBAEuBnF,WAAN,kCAFjBmF,UAIR,6BAA+BjH,EAAnC,OAJYiH,iCAKiC,oEALjCA,gBAKFC,EALED,EAKFC,yBACR,qBAAuB,MAA6B,CAAEC,OAAQ,CAAExB,YAAa,KAAKA,eANxEsB,2BAOD,6BAA+BjH,EAAnC,OAPKiH,kCAQmC,4DARnCA,iBAQFG,EAREH,EAQFG,2BACR,qBAAuB,MAA+B,CAAED,OAAQ,CAAExB,YAAa,KAAKA,eAT1EsB,8BAWJ,4CAAqC,KAArC,sBAAN,sCAXUA,WAcP,uBAAD,UAAJ,EAdYA,kCAeJ,6BACJI,IAAM,KAAD,cAAqB,CAAEC,cAAevB,EAAOuB,eAAiB,CAAEC,kBAAmB,CAAEC,WAAU,OAAEzB,QAAF,IAAEA,OAAF,EAAEA,EAAQyB,eAhBtGP,aAmBRQ,EAAe,uBAAnB,SAnBYR,oBAqBN,6BAA+BjH,EAAnC,OArBUiH,kCAsBwB,sDAtBxBA,iBAsBAS,EAtBAT,EAsBAS,cACRD,EAAeC,iBAAfD,OAvBQR,yBAyBJ,mCAAN,GAzBUA,QA0BV,YAAcnD,EAAd,UACA,UAAUO,EAAV,UAAoC,CAAEsC,QAAS/C,EAAX,UAAsC+D,aAAc5B,IA3B9EkB,iD,4DAvIsB1C","file":"static/js/17.557a9485.chunk.js","sourcesContent":["import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { SafeEventEmitter } from '@toruslabs/openlogin-jrpc';\nimport { CustomError } from 'ts-custom-error';\n\nfunction ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nconst CHAIN_NAMESPACES = {\n  EIP155: \"eip155\",\n  SOLANA: \"solana\"\n};\nconst ADAPTER_NAMESPACES = _objectSpread$2(_objectSpread$2({}, CHAIN_NAMESPACES), {}, {\n  MULTICHAIN: \"multichain\"\n});\n\nconst DEFAULT_INFURA_ID = \"776218ac4734478c90191dde8cae483c\";\n\nconst getDefaultNetworkId = chainNamespace => {\n  if (chainNamespace === CHAIN_NAMESPACES.EIP155) {\n    return 1;\n  } else if (chainNamespace === CHAIN_NAMESPACES.SOLANA) {\n    return 1;\n  }\n\n  throw new Error(\"Chain namespace \".concat(chainNamespace, \" is not supported\"));\n};\n\nconst getEvmChainConfig = chainId => {\n  const chainNamespace = CHAIN_NAMESPACES.EIP155;\n\n  if (chainId === 1) {\n    return {\n      chainNamespace,\n      chainId: \"0x1\",\n      rpcTarget: \"https://mainnet.infura.io/v3/\".concat(DEFAULT_INFURA_ID),\n      displayName: \"Ethereum Mainnet\",\n      blockExplorer: \"https://etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\"\n    };\n  } else if (chainId === 3) {\n    return {\n      chainNamespace,\n      chainId: \"0x3\",\n      rpcTarget: \"https://ropsten.infura.io/v3/\".concat(DEFAULT_INFURA_ID),\n      displayName: \"ropsten\",\n      blockExplorer: \"https://ropsten.etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\"\n    };\n  } else if (chainId === 4) {\n    return {\n      chainNamespace,\n      chainId: \"0x4\",\n      rpcTarget: \"https://rinkeby.infura.io/v3/\".concat(DEFAULT_INFURA_ID),\n      displayName: \"rinkeby\",\n      blockExplorer: \"https://rinkeby.etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\"\n    };\n  } else if (chainId === 5) {\n    return {\n      chainNamespace,\n      chainId: \"0x5\",\n      rpcTarget: \"https://goerli.infura.io/v3/\".concat(DEFAULT_INFURA_ID),\n      displayName: \"goerli\",\n      blockExplorer: \"https://goerli.etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\"\n    };\n  } else if (chainId === 42) {\n    return {\n      chainNamespace,\n      chainId: \"0x2a\",\n      rpcTarget: \"https://kovan.infura.io/v3/\".concat(DEFAULT_INFURA_ID),\n      displayName: \"kovan\",\n      blockExplorer: \"https://kovan.etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\"\n    };\n  } else if (chainId === 137) {\n    return {\n      chainNamespace,\n      rpcTarget: \"https://polygon-rpc.com\",\n      blockExplorer: \"https://polygonscan.com\",\n      chainId: \"0x89\",\n      displayName: \"Polygon Mainnet\",\n      ticker: \"matic\",\n      tickerName: \"matic\"\n    };\n  } else if (chainId === 80001) {\n    return {\n      chainNamespace,\n      rpcTarget: \"https://rpc-mumbai.maticvigil.com\",\n      blockExplorer: \"https://mumbai-explorer.matic.today\",\n      chainId: \"0x13881\",\n      displayName: \"Polygon Mumbai Testnet\",\n      ticker: \"matic\",\n      tickerName: \"matic\"\n    };\n  } else if (chainId === 56) {\n    return {\n      chainNamespace,\n      rpcTarget: \"https://bsc-dataseed.binance.org\",\n      blockExplorer: \"https://bscscan.com\",\n      chainId: \"0x38\",\n      displayName: \"Binance SmartChain Mainnet\",\n      ticker: \"BNB\",\n      tickerName: \"BNB\"\n    };\n  } else if (chainId === 97) {\n    return {\n      chainNamespace,\n      rpcTarget: \"https://data-seed-prebsc-2-s3.binance.org:8545\",\n      blockExplorer: \"https://testnet.bscscan.com\",\n      chainId: \"0x61\",\n      displayName: \"Binance SmartChain Testnet\",\n      ticker: \"BNB\",\n      tickerName: \"BNB\"\n    };\n  }\n\n  return null;\n};\nconst getSolanaChainConfig = chainId => {\n  const chainNamespace = CHAIN_NAMESPACES.SOLANA;\n\n  if (chainId === 1) {\n    return {\n      chainNamespace,\n      blockExplorer: \"https://explorer.solana.com\",\n      chainId: \"0x1\",\n      displayName: \"Solana Mainnet\",\n      rpcTarget: \"https://api.mainnet-beta.solana.com\",\n      ticker: \"SOL\",\n      tickerName: \"Solana Token\"\n    };\n  } else if (chainId === 2) {\n    return {\n      rpcTarget: \"https://api.testnet.solana.com\",\n      blockExplorer: \"https://explorer.solana.com?cluster=testnet\",\n      chainId: \"0x2\",\n      chainNamespace,\n      displayName: \"testnet\",\n      ticker: \"SOL\",\n      tickerName: \"solana\"\n    };\n  } else if (chainId === 3) {\n    return {\n      rpcTarget: \"https://api.devnet.solana.com\",\n      blockExplorer: \"https://explorer.solana.com?cluster=devnet\",\n      chainId: \"0x3\",\n      chainNamespace,\n      displayName: \"devnet\",\n      ticker: \"SOL\",\n      tickerName: \"solana\"\n    };\n  }\n\n  return null;\n};\nconst getChainConfig = (chainNamespace, chainId) => {\n  const finalChainId = chainId ? typeof chainId === \"number\" ? chainId : parseInt(chainId, 16) : getDefaultNetworkId(chainNamespace);\n\n  if (chainNamespace === CHAIN_NAMESPACES.EIP155) {\n    return getEvmChainConfig(finalChainId);\n  } else if (chainNamespace === CHAIN_NAMESPACES.SOLANA) {\n    return getSolanaChainConfig(finalChainId);\n  }\n\n  return null;\n};\n\nclass Web3AuthError extends CustomError {\n  constructor(code, message) {\n    // takes care of stack and proto\n    super(message);\n\n    _defineProperty(this, \"code\", void 0);\n\n    _defineProperty(this, \"message\", void 0);\n\n    this.code = code;\n    this.message = message || \"\"; // Set name explicitly as minification can mangle class names\n\n    Object.defineProperty(this, \"name\", {\n      value: \"Web3AuthError\"\n    });\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      code: this.code,\n      message: this.message\n    };\n  }\n\n  toString() {\n    return JSON.stringify(this.toJSON());\n  }\n\n}\nclass WalletInitializationError extends Web3AuthError {\n  constructor(code, message) {\n    // takes care of stack and proto\n    super(code, message); // Set name explicitly as minification can mangle class names\n\n    Object.defineProperty(this, \"name\", {\n      value: \"WalletInitializationError\"\n    });\n  }\n\n  static fromCode(code) {\n    let extraMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    return new WalletInitializationError(code, \"\".concat(WalletInitializationError.messages[code], \", \").concat(extraMessage));\n  } // Custom methods\n\n\n  static notFound() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5001, extraMessage);\n  }\n\n  static notInstalled() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5002, extraMessage);\n  }\n\n  static notReady() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5003, extraMessage);\n  }\n\n  static windowBlocked() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5004, extraMessage);\n  }\n\n  static windowClosed() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5005, extraMessage);\n  }\n\n  static incompatibleChainNameSpace() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5006, extraMessage);\n  }\n\n  static duplicateAdapterError() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5007, extraMessage);\n  }\n\n  static invalidProviderConfigError() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5008, extraMessage);\n  }\n\n  static providerNotReadyError() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5009, extraMessage);\n  }\n\n  static rpcConnectionError() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5010, extraMessage);\n  }\n\n  static invalidParams() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5011, extraMessage);\n  }\n\n  static invalidNetwork() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletInitializationError.fromCode(5013, extraMessage);\n  }\n\n}\n/**\n * wallet login errors\n */\n\n_defineProperty(WalletInitializationError, \"messages\", {\n  5000: \"Custom\",\n  5001: \"Wallet is not found\",\n  5002: \"Wallet is not installed\",\n  5003: \"Wallet is not ready yet\",\n  5004: \"Wallet window is blocked\",\n  5005: \"Wallet window has been closed by the user\",\n  5006: \"Incompatible chain namespace provided\",\n  5007: \"Adapter has already been included\",\n  5008: \"Invalid provider Config\",\n  5009: \"Provider is not ready yet\",\n  5010: \"Failed to connect with rpc url\",\n  5011: \"Invalid params passed in\",\n  5013: \"Invalid network provided\"\n});\n\nclass WalletLoginError extends Web3AuthError {\n  constructor(code, message) {\n    // takes care of stack and proto\n    super(code, message); // Set name explicitly as minification can mangle class names\n\n    Object.defineProperty(this, \"name\", {\n      value: \"WalletLoginError\"\n    });\n  }\n\n  static fromCode(code) {\n    let extraMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    return new WalletLoginError(code, \"\".concat(WalletLoginError.messages[code]).concat(extraMessage));\n  }\n\n  static connectionError() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletLoginError.fromCode(5111, extraMessage);\n  }\n\n  static disconnectionError() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletLoginError.fromCode(5112, extraMessage);\n  }\n\n  static notConnectedError() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletLoginError.fromCode(5113, extraMessage);\n  }\n\n  static popupClosed() {\n    let extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    return WalletLoginError.fromCode(5114, extraMessage);\n  }\n\n}\n\n_defineProperty(WalletLoginError, \"messages\", {\n  5000: \"Custom\",\n  5111: \"Failed to connect with wallet\",\n  5112: \"Failed to disconnect from wallet\",\n  5113: \"Wallet is not connected\",\n  5114: \"Wallet popup has been closed by the user\"\n});\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nconst MULTI_CHAIN_ADAPTERS = {\n  OPENLOGIN: \"openlogin\",\n  WALLET_CONNECT_V1: \"wallet-connect-v1\",\n  WALLET_CONNECT_V2: \"wallet-connect-v2\"\n};\nconst SOLANA_ADAPTERS = _objectSpread$1({\n  TORUS_SOLANA: \"torus-solana\",\n  PHANTOM: \"phantom\"\n}, MULTI_CHAIN_ADAPTERS);\nconst EVM_ADAPTERS = _objectSpread$1({\n  TORUS_EVM: \"torus-evm\",\n  METAMASK: \"metamask\"\n}, MULTI_CHAIN_ADAPTERS);\nconst WALLET_ADAPTERS = _objectSpread$1(_objectSpread$1({}, EVM_ADAPTERS), SOLANA_ADAPTERS);\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nconst ADAPTER_CATEGORY = {\n  EXTERNAL: \"external\",\n  IN_APP: \"in_app\"\n};\nconst ADAPTER_STATUS = {\n  NOT_READY: \"not_ready\",\n  READY: \"ready\",\n  CONNECTING: \"connecting\",\n  CONNECTED: \"connected\",\n  DISCONNECTED: \"disconnected\",\n  ERRORED: \"errored\"\n};\nconst ADAPTER_EVENTS = _objectSpread(_objectSpread({}, ADAPTER_STATUS), {}, {\n  ADAPTER_DATA_UPDATED: \"adapter_data_updated\"\n});\nclass BaseAdapter extends SafeEventEmitter {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"adapterData\", {});\n\n    _defineProperty(this, \"chainConfig\", null);\n  }\n\n  get chainConfigProxy() {\n    return this.chainConfig ? _objectSpread({}, this.chainConfig) : null;\n  }\n\n  setChainConfig(customChainConfig) {\n    if (this.status === ADAPTER_STATUS.READY) return;\n    if (!customChainConfig.chainNamespace) throw WalletInitializationError.notReady(\"ChainNamespace is required while setting chainConfig\");\n    const defaultChainConfig = getChainConfig(customChainConfig.chainNamespace, customChainConfig.chainId);\n    this.chainConfig = _objectSpread(_objectSpread({}, defaultChainConfig), customChainConfig);\n  }\n\n  setAdapterSettings(_) {}\n\n  checkConnectionRequirements() {\n    // we reconnect without killing existing wallet connect session on calling connect again.\n    if (this.name === WALLET_ADAPTERS.WALLET_CONNECT_V1 && this.status === ADAPTER_STATUS.CONNECTING) return;else if (this.status === ADAPTER_STATUS.CONNECTING) throw WalletInitializationError.notReady(\"Already connecting\");\n    if (this.status === ADAPTER_STATUS.CONNECTED) throw WalletLoginError.connectionError(\"Already connected\");\n    if (this.status !== ADAPTER_STATUS.READY) throw WalletLoginError.connectionError(\"Wallet adapter is not ready yet\");\n  }\n\n  checkInitializationRequirements() {\n    if (this.status === ADAPTER_STATUS.NOT_READY) return;\n    if (this.status === ADAPTER_STATUS.CONNECTED) throw WalletInitializationError.notReady(\"Already connected\");\n    if (this.status === ADAPTER_STATUS.READY) throw WalletInitializationError.notReady(\"Adapter is already initialized\");\n  }\n\n  updateAdapterData(data) {\n    this.adapterData = data;\n    this.emit(ADAPTER_EVENTS.ADAPTER_DATA_UPDATED, {\n      adapterName: this.name,\n      data\n    });\n  }\n\n}\n\nconst PROVIDER_EVENTS = {\n  INITIALIZED: \"initialized\",\n  ERRORED: \"errored\"\n};\n\nfunction storageAvailable(type) {\n  let storageExists = false;\n  let storageLength = 0;\n  let storage;\n\n  try {\n    storage = window[type];\n    storageExists = true;\n    storageLength = storage.length;\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (error) {\n    const _error = error;\n    return !!(_error && ( // everything except Firefox\n    _error.code === 22 || // Firefox\n    _error.code === 1014 || // test name field too, because code might not be present\n    // everything except Firefox\n    _error.name === \"QuotaExceededError\" || // Firefox\n    _error.name === \"NS_ERROR_DOM_QUOTA_REACHED\") && // acknowledge QuotaExceededError only if there's something already stored\n    storageExists && storageLength !== 0);\n  }\n}\nconst isHexStrict = hex => {\n  return (typeof hex === \"string\" || typeof hex === \"number\") && /^(-)?0x[0-9a-f]*$/i.test(hex);\n};\n\nexport { ADAPTER_CATEGORY, ADAPTER_EVENTS, ADAPTER_NAMESPACES, ADAPTER_STATUS, BaseAdapter, CHAIN_NAMESPACES, DEFAULT_INFURA_ID, EVM_ADAPTERS, MULTI_CHAIN_ADAPTERS, PROVIDER_EVENTS, SOLANA_ADAPTERS, WALLET_ADAPTERS, WalletInitializationError, WalletLoginError, Web3AuthError, getChainConfig, getEvmChainConfig, getSolanaChainConfig, isHexStrict, storageAvailable };\n//# sourceMappingURL=base.esm.js.map\n",null,null,null,null,"import OpenLogin, { OPENLOGIN_NETWORK, UX_MODE, getHashQueryParams } from '@toruslabs/openlogin';\nimport { getChainConfig, BaseAdapter, WALLET_ADAPTERS, ADAPTER_NAMESPACES, ADAPTER_CATEGORY, ADAPTER_STATUS, CHAIN_NAMESPACES, WalletInitializationError, ADAPTER_EVENTS, WalletLoginError } from '@web3auth/base';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport merge from 'lodash.merge';\nimport log from 'loglevel';\n\nconst getOpenloginDefaultOptions = (chainNamespace, chainId) => {\n  return {\n    adapterSettings: {\n      network: OPENLOGIN_NETWORK.MAINNET,\n      clientId: \"\",\n      uxMode: UX_MODE.POPUP\n    },\n    chainConfig: chainNamespace ? getChainConfig(chainNamespace, chainId) : undefined,\n    loginSettings: {\n      relogin: true\n    }\n  };\n};\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass OpenloginAdapter extends BaseAdapter {\n  constructor(params) {\n    var _params$chainConfig, _params$chainConfig2, _params$chainConfig3;\n\n    super();\n\n    _defineProperty(this, \"name\", WALLET_ADAPTERS.OPENLOGIN);\n\n    _defineProperty(this, \"adapterNamespace\", ADAPTER_NAMESPACES.MULTICHAIN);\n\n    _defineProperty(this, \"type\", ADAPTER_CATEGORY.IN_APP);\n\n    _defineProperty(this, \"openloginInstance\", null);\n\n    _defineProperty(this, \"status\", ADAPTER_STATUS.NOT_READY);\n\n    _defineProperty(this, \"currentChainNamespace\", CHAIN_NAMESPACES.EIP155);\n\n    _defineProperty(this, \"openloginOptions\", void 0);\n\n    _defineProperty(this, \"loginSettings\", {});\n\n    _defineProperty(this, \"privKeyProvider\", null);\n\n    log.debug(\"const openlogin adapter\", params);\n    const defaultOptions = getOpenloginDefaultOptions((_params$chainConfig = params.chainConfig) === null || _params$chainConfig === void 0 ? void 0 : _params$chainConfig.chainNamespace, (_params$chainConfig2 = params.chainConfig) === null || _params$chainConfig2 === void 0 ? void 0 : _params$chainConfig2.chainId);\n    this.openloginOptions = _objectSpread(_objectSpread({\n      clientId: \"\",\n      network: OPENLOGIN_NETWORK.MAINNET\n    }, defaultOptions.adapterSettings), params.adapterSettings || {});\n    this.loginSettings = _objectSpread(_objectSpread({}, defaultOptions.loginSettings), params.loginSettings); // if no chainNamespace is passed then chain config should be set before calling init\n\n    if ((_params$chainConfig3 = params.chainConfig) !== null && _params$chainConfig3 !== void 0 && _params$chainConfig3.chainNamespace) {\n      var _params$chainConfig4;\n\n      this.currentChainNamespace = (_params$chainConfig4 = params.chainConfig) === null || _params$chainConfig4 === void 0 ? void 0 : _params$chainConfig4.chainNamespace;\n      const defaultChainIdConfig = defaultOptions.chainConfig ? defaultOptions.chainConfig : {};\n      this.chainConfig = _objectSpread(_objectSpread({}, defaultChainIdConfig), params === null || params === void 0 ? void 0 : params.chainConfig);\n      log.debug(\"const openlogin chainConfig\", this.chainConfig);\n\n      if (!this.chainConfig.rpcTarget) {\n        throw WalletInitializationError.invalidParams(\"rpcTarget is required in chainConfig\");\n      }\n    }\n  }\n\n  get chainConfigProxy() {\n    return this.chainConfig ? _objectSpread({}, this.chainConfig) : null;\n  }\n\n  get provider() {\n    var _this$privKeyProvider;\n\n    return ((_this$privKeyProvider = this.privKeyProvider) === null || _this$privKeyProvider === void 0 ? void 0 : _this$privKeyProvider.provider) || null;\n  }\n\n  set provider(_) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options) {\n    var _this$openloginOption;\n\n    super.checkInitializationRequirements();\n    if (!((_this$openloginOption = this.openloginOptions) !== null && _this$openloginOption !== void 0 && _this$openloginOption.clientId)) throw WalletInitializationError.invalidParams(\"clientId is required before openlogin's initialization\");\n    if (!this.chainConfig) throw WalletInitializationError.invalidParams(\"chainConfig is required before initialization\");\n    this.openloginInstance = new OpenLogin(this.openloginOptions);\n    const redirectResult = getHashQueryParams();\n    let isRedirectResult = true;\n\n    if (Object.keys(redirectResult).length > 0 && redirectResult.result) {\n      isRedirectResult = true;\n    }\n\n    await this.openloginInstance.init();\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.OPENLOGIN);\n\n    try {\n      // connect only if it is redirect result or if connect (adapter is cached/already connected in same session) is true\n      if (this.openloginInstance.privKey && (options.autoConnect || isRedirectResult)) {\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with cached openlogin provider\", error);\n      this.emit(\"ERRORED\", error);\n    }\n  }\n\n  async connect(params) {\n    super.checkConnectionRequirements();\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, _objectSpread(_objectSpread({}, params), {}, {\n      adapter: WALLET_ADAPTERS.OPENLOGIN\n    }));\n\n    try {\n      await this.connectWithProvider(params);\n      return this.provider;\n    } catch (error) {\n      log.error(\"Failed to connect with openlogin provider\", error); // ready again to be connected\n\n      this.status = ADAPTER_STATUS.READY;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n\n      if (error !== null && error !== void 0 && error.message.includes(\"user closed popup\")) {\n        throw WalletLoginError.popupClosed();\n      }\n\n      throw WalletLoginError.connectionError(\"Failed to login with openlogin\");\n    }\n  }\n\n  async disconnect() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      cleanup: false\n    };\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.openloginInstance) throw WalletInitializationError.notReady(\"openloginInstance is not ready\");\n    await this.openloginInstance.logout();\n\n    if (options.cleanup) {\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.openloginInstance = null;\n      this.privKeyProvider = null;\n    } else {\n      // ready to be connected again\n      this.status = ADAPTER_STATUS.READY;\n    }\n\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n\n  async getUserInfo() {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.openloginInstance) throw WalletInitializationError.notReady(\"openloginInstance is not ready\");\n    const userInfo = await this.openloginInstance.getUserInfo();\n    return userInfo;\n  } // should be called only before initialization.\n\n\n  setAdapterSettings(adapterSettings) {\n    if (this.status === ADAPTER_STATUS.READY) return;\n    const defaultOptions = getOpenloginDefaultOptions();\n    this.openloginOptions = _objectSpread(_objectSpread(_objectSpread({}, defaultOptions.adapterSettings), this.openloginOptions || {}), adapterSettings);\n  } // should be called only before initialization.\n\n\n  setChainConfig(customChainConfig) {\n    super.setChainConfig(customChainConfig);\n    this.currentChainNamespace = customChainConfig.chainNamespace;\n  }\n\n  async connectWithProvider(params) {\n    if (!this.chainConfig) throw WalletInitializationError.invalidParams(\"chainConfig is required before initialization\");\n    if (!this.openloginInstance) throw WalletInitializationError.notReady(\"openloginInstance is not ready\");\n\n    if (this.currentChainNamespace === CHAIN_NAMESPACES.SOLANA) {\n      const {\n        SolanaPrivateKeyProvider\n      } = await import('@web3auth/solana-provider');\n      this.privKeyProvider = new SolanaPrivateKeyProvider({\n        config: {\n          chainConfig: this.chainConfig\n        }\n      });\n    } else if (this.currentChainNamespace === CHAIN_NAMESPACES.EIP155) {\n      const {\n        EthereumPrivateKeyProvider\n      } = await import('@web3auth/ethereum-provider');\n      this.privKeyProvider = new EthereumPrivateKeyProvider({\n        config: {\n          chainConfig: this.chainConfig\n        }\n      });\n    } else {\n      throw new Error(\"Invalid chainNamespace: \".concat(this.currentChainNamespace, \" found while connecting to wallet\"));\n    } // if not logged in then login\n\n\n    if (!this.openloginInstance.privKey && params) {\n      await this.openloginInstance.login(merge(this.loginSettings, {\n        loginProvider: params.loginProvider\n      }, {\n        extraLoginOptions: {\n          login_hint: params === null || params === void 0 ? void 0 : params.login_hint\n        }\n      }));\n    }\n\n    let finalPrivKey = this.openloginInstance.privKey;\n\n    if (finalPrivKey) {\n      if (this.currentChainNamespace === CHAIN_NAMESPACES.SOLANA) {\n        const {\n          getED25519Key\n        } = await import('@toruslabs/openlogin-ed25519');\n        finalPrivKey = getED25519Key(finalPrivKey).sk.toString(\"hex\");\n      }\n\n      await this.privKeyProvider.setupProvider(finalPrivKey);\n      this.status = ADAPTER_STATUS.CONNECTED;\n      this.emit(ADAPTER_EVENTS.CONNECTED, {\n        adapter: WALLET_ADAPTERS.OPENLOGIN,\n        reconnected: !params\n      });\n    }\n  }\n\n}\n\nexport { OpenloginAdapter, getOpenloginDefaultOptions };\n//# sourceMappingURL=openloginAdapter.esm.js.map\n",null],"sourceRoot":""}